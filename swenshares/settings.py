"""
Django settings for swenshares project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

from decouple import config

SECRET_KEY = config('SECRET_KEY')


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS should include the IPs or domains you'll use
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='*').split(',')

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:4200",
]




# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'simple_history', # 
    'django_filters',
    'rest_framework',
    'shareholders',
    'sharedapp',
    'issuingCompany',
    'drf_yasg',
]




# DRF_KEYCLOAK_AUTH = {
#     'KEYCLOAK_SERVER_URL': config('KEYCLOAK_SERVER_URL'),
#     'KEYCLOAK_REALM': config('KEYCLOAK_REALM'),
#     'KEYCLOAK_CLIENT_ID': config('KEYCLOAK_CLIENT_ID'),
#     'KEYCLOAK_CLIENT_SECRET_KEY': config('KEYCLOAK_CLIENT_SECRET'),
#     'KEYCLOAK_AUTHORIZATION_ENABLED': True,
#     'KEYCLOAK_AUTH_HEADER_PREFIX': 'Bearer',
#     'KEYCLOAK_ROLE_SET_PREFIX': 'role:',
#     'KEYCLOAK_USER_ROLES_PATH': 'realm_access.roles',
#     'KEYCLOAK_DJANGO_USER_UUID_FIELD': 'id',  # Ajoutez cette ligne
#     'KEYCLOAK_USER_ID_FIELD': 'sub',  # Ajoutez cette ligne
#     'KEYCLOAK_MANAGE_LOCAL_USER': True,  # Changez à True
# }

# Configuration Keycloak
KEYCLOAK_CONFIG = {
    'SERVER_URL': config('KEYCLOAK_SERVER_URL'),
    'REALM': config('KEYCLOAK_REALM'),
    'CLIENT_ID': config('KEYCLOAK_CLIENT_ID'),
    'CLIENT_SECRET': config('KEYCLOAK_CLIENT_SECRET'),
    'VERIFY_SSL': False
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'swenshares.auth.KeycloakAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Gardez uniquement celui-ci pour commencer
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'swenshares.middleware.KeycloakUserMiddleware',  # Utilisez uniquement celui-ci
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
]

ROOT_URLCONF = 'swenshares.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'swenshares.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# Déterminez si vous êtes dans Docker ou en local
# IN_DOCKER = os.environ.get('DOCKER_CONTAINER', False)

# if IN_DOCKER:
#     # Configuration pour Docker
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.mysql',
#             'NAME': config('DB_NAME'),
#             'USER': config('DB_USER'),
#             'PASSWORD': config('DB_PASSWORD'),
#             'HOST': 'swenshares-mysql',  # Nom du service dans docker-compose
#             'PORT': '3306',   # Port interne dans Docker
#             'OPTIONS': {
#                 'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
#                 'charset': 'utf8mb4',
#                 'use_unicode': True,
#             },
#         }
#     }
# else:
#     # Configuration pour développement local
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.mysql',
#             'NAME': config('DB_NAME'),
#             'USER': config('DB_USER'),
#             'PASSWORD': config('DB_PASSWORD'),
#             'HOST': config('DB_HOST', default='127.0.0.1'),
#             'PORT': config('DB_PORT', default='3307'),  # Port exposé dans docker-compose
#             'OPTIONS': {
#                 'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
#                 'charset': 'utf8mb4',
#                 'use_unicode': True,
#             },
#         }
#     }

# Configuration pour Azure
DATABASES = {
    
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'swenshares_db',
        'USER': 'swenshares_user',
        'PASSWORD': 'P@ssword01',
        'HOST': '13.93.236.185',  # L'adresse IP publique de votre VM Azure
        'PORT': 3307,           # Le port exposé pour MySQL
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers':False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style':'{'
        },
        'style':{
            'format':'{levelname} {message}',
            'style':'{'
        },
    },
    'handlers': {
        'file':{
            'level':'DEBUG',
            'class':'logging.FileHandler',
            'filename': os.path.join(BASE_DIR,'logs','debug.log'),
            'formatter':'verbose',
        },
        'console': {
            'level':'INFO',
            'class':'logging.StreamHandler',
            'formatter':'style',
        },
    },
    'loggers':{
        'django':{
            'handlers':['file','console'],
            'level':'DEBUG',
            'propagate':True,
        },
    },
}


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Definition du chemin de stoquage des fichiers 

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')
