# Generated by Django 4.2.1 on 2024-12-19 12:37

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import issuingCompany.exceptions
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalIssuingCompany',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Company Name')),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('legal', models.CharField(max_length=255, verbose_name='Legal Status')),
                ('logo', models.TextField(help_text='Upload the Company logo when creating it', max_length=100, validators=[issuingCompany.exceptions.Exception.validate_image_extension, issuingCompany.exceptions.Exception.validate_file_size])),
                ('founded_date', models.DateField()),
                ('currency', models.CharField(choices=[('FCFA', 'Franc CFA'), ('USD', 'Dollar American'), ('EUR', 'EURO'), ('GBP', 'Livre sterling'), ('JPY', 'Yen japonais')], default='FCFA', max_length=10)),
                ('status_document', models.TextField(max_length=100, validators=[issuingCompany.exceptions.Exception.validate_file_extension, issuingCompany.exceptions.Exception.validate_file_size])),
                ('internal_regulations_document', models.TextField(max_length=100, validators=[issuingCompany.exceptions.Exception.validate_file_extension, issuingCompany.exceptions.Exception.validate_file_size])),
                ('registration_trade_register', models.TextField(max_length=100, validators=[issuingCompany.exceptions.Exception.validate_file_extension, issuingCompany.exceptions.Exception.validate_file_size])),
                ('ninea', models.CharField(help_text='Enter a NINEA between 9 to 12 digits', max_length=12, validators=[django.core.validators.MinLengthValidator(9), django.core.validators.RegexValidator(message='Le NINEA doit contenir uniquement des chiffres.', regex='^\\d+$')])),
                ('organization_chart', models.TextField(max_length=100, validators=[issuingCompany.exceptions.Exception.validate_file_extension, issuingCompany.exceptions.Exception.validate_file_size])),
                ('capital_social', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('number_of_shares', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('value_of_shares', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('EXAMINED', 'Examined'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='SUBMITTED', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Issuing Company',
                'verbose_name_plural': 'historical Issuing Companies',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSocialAct',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('general_assembly_pv', models.TextField(max_length=100, validators=[issuingCompany.exceptions.Exception.validate_file_extension, issuingCompany.exceptions.Exception.validate_file_size])),
                ('date', models.DateField()),
                ('general_assembly_type', models.CharField(choices=[('ORDINARY', 'Ordinary'), ('EXTRAORDINARY', 'Extraordinary')], default='ORDINARY', max_length=20)),
                ('social_act_type', models.CharField(choices=[('STORE_INCORPORATION', 'Store_Incorporation'), ('RESOURCE_EXTERN', 'Resource_Extern')], default='STORE_INCORPORATION', max_length=20)),
                ('older_capital', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('new_capital', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('EXAMINED', 'Examined'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='SUBMITTED', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Social Act',
                'verbose_name_plural': 'historical Social Acts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSociale',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('capital_social', models.CharField(max_length=200)),
                ('nombre_parts_sociales', models.PositiveIntegerField(help_text='Total number of social shares', validators=[django.core.validators.MinValueValidator(1)])),
                ('valeur_parts_sociales', models.DecimalField(decimal_places=2, help_text='Value of each social share', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Social Capital',
                'verbose_name_plural': 'historical Social Capitals',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTransaction',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('type', models.CharField(choices=[('PURCHASE', 'Purchase'), ('SALE', 'Sale'), ('TRANSFER', 'Transfer')], default='SALE', max_length=20)),
                ('seller_object_id', models.UUIDField()),
                ('buyer_object_id', models.UUIDField()),
                ('quantity', models.PositiveIntegerField(help_text='Number of shares in the transaction', validators=[django.core.validators.MinValueValidator(1)])),
                ('price_per_share', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('transaction_date', models.DateTimeField(blank=True, editable=False)),
                ('transaction_document', models.TextField(blank=True, max_length=100, null=True)),
                ('is_confidential', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('VALIDATED', 'Validated'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('total_capital_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical transaction',
                'verbose_name_plural': 'historical Transactions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='IssuingCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Company Name')),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('legal', models.CharField(max_length=255, verbose_name='Legal Status')),
                ('logo', models.ImageField(help_text='Upload the Company logo when creating it', upload_to='logos/', validators=[issuingCompany.exceptions.Exception.validate_image_extension, issuingCompany.exceptions.Exception.validate_file_size])),
                ('founded_date', models.DateField()),
                ('currency', models.CharField(choices=[('FCFA', 'Franc CFA'), ('USD', 'Dollar American'), ('EUR', 'EURO'), ('GBP', 'Livre sterling'), ('JPY', 'Yen japonais')], default='FCFA', max_length=10)),
                ('status_document', models.FileField(upload_to='documents/', validators=[issuingCompany.exceptions.Exception.validate_file_extension, issuingCompany.exceptions.Exception.validate_file_size])),
                ('internal_regulations_document', models.FileField(upload_to='documents/', validators=[issuingCompany.exceptions.Exception.validate_file_extension, issuingCompany.exceptions.Exception.validate_file_size])),
                ('registration_trade_register', models.FileField(upload_to='documents/', validators=[issuingCompany.exceptions.Exception.validate_file_extension, issuingCompany.exceptions.Exception.validate_file_size])),
                ('ninea', models.CharField(help_text='Enter a NINEA between 9 to 12 digits', max_length=12, validators=[django.core.validators.MinLengthValidator(9), django.core.validators.RegexValidator(message='Le NINEA doit contenir uniquement des chiffres.', regex='^\\d+$')])),
                ('organization_chart', models.FileField(upload_to='documents/', validators=[issuingCompany.exceptions.Exception.validate_file_extension, issuingCompany.exceptions.Exception.validate_file_size])),
                ('capital_social', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('number_of_shares', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('value_of_shares', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('EXAMINED', 'Examined'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='SUBMITTED', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Issuing Company',
                'verbose_name_plural': 'Issuing Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SocialAct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('general_assembly_pv', models.FileField(upload_to='documents/', validators=[issuingCompany.exceptions.Exception.validate_file_extension, issuingCompany.exceptions.Exception.validate_file_size])),
                ('date', models.DateField()),
                ('general_assembly_type', models.CharField(choices=[('ORDINARY', 'Ordinary'), ('EXTRAORDINARY', 'Extraordinary')], default='ORDINARY', max_length=20)),
                ('social_act_type', models.CharField(choices=[('STORE_INCORPORATION', 'Store_Incorporation'), ('RESOURCE_EXTERN', 'Resource_Extern')], default='STORE_INCORPORATION', max_length=20)),
                ('older_capital', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('new_capital', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('EXAMINED', 'Examined'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='SUBMITTED', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Social Act',
                'verbose_name_plural': 'Social Acts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sociale',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('capital_social', models.CharField(max_length=200)),
                ('nombre_parts_sociales', models.PositiveIntegerField(help_text='Total number of social shares', validators=[django.core.validators.MinValueValidator(1)])),
                ('valeur_parts_sociales', models.DecimalField(decimal_places=2, help_text='Value of each social share', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Social Capital',
                'verbose_name_plural': 'Social Capitals',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('PURCHASE', 'Purchase'), ('SALE', 'Sale'), ('TRANSFER', 'Transfer')], default='SALE', max_length=20)),
                ('seller_object_id', models.UUIDField()),
                ('buyer_object_id', models.UUIDField()),
                ('quantity', models.PositiveIntegerField(help_text='Number of shares in the transaction', validators=[django.core.validators.MinValueValidator(1)])),
                ('price_per_share', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('transaction_document', models.FileField(blank=True, null=True, upload_to='transaction_documents/')),
                ('is_confidential', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('VALIDATED', 'Validated'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('total_capital_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Transactions',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='ActeSocialAugmentation',
            fields=[
                ('socialact_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='issuingCompany.socialact')),
                ('nouveau_capital', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
            ],
            options={
                'verbose_name': 'Capital Increase Act',
                'verbose_name_plural': 'Capital Increase Acts',
            },
            bases=('issuingCompany.socialact',),
        ),
        migrations.CreateModel(
            name='ActeSocialReduction',
            fields=[
                ('socialact_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='issuingCompany.socialact')),
                ('nouveau_capital', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
            ],
            options={
                'verbose_name': 'Capital Reduction Act',
                'verbose_name_plural': 'Capital Reduction Acts',
            },
            bases=('issuingCompany.socialact',),
        ),
    ]
