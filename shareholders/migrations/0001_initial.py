# Generated by Django 4.2.1 on 2024-12-19 12:37

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import shareholders.models
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('sharedapp', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('issuingCompany', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('is_primary', models.BooleanField(default=False)),
                ('effective_date', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'addresses',
                'ordering': ['-effective_date'],
            },
        ),
        migrations.CreateModel(
            name='ContactPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in format: '+999999999'", regex='^\\+?1?\\d{9,15}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contact Person',
                'verbose_name_plural': 'Contact Persons',
            },
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveIntegerField()),
                ('is_validated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issuing_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='issuingCompany.issuingcompany')),
            ],
            options={
                'verbose_name': 'Share',
                'verbose_name_plural': 'Shares',
            },
        ),
        migrations.CreateModel(
            name='PhysicalShareholder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('EXAMINED', 'Examined'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='SUBMITTED', max_length=20)),
                ('effective_date', models.DateField()),
                ('activity_sector', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('total_shares', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(Decimal('1')), django.core.validators.MaxValueValidator(Decimal('1000000'))])),
                ('national_id', models.CharField(max_length=50, unique=True)),
                ('national_id_expiration', models.DateField()),
                ('date_of_birth', models.DateField()),
                ('reference_number', models.CharField(max_length=50, unique=True)),
                ('addresses', models.ManyToManyField(related_name='physical_shareholders', to='shareholders.address')),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_approved', to=settings.AUTH_USER_MODEL)),
                ('contact_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shareholders.contactperson')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('dividends', models.ManyToManyField(related_name='physical_shareholders', to='sharedapp.dividend')),
                ('examined_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_examined', to=settings.AUTH_USER_MODEL)),
                ('issuing_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='issuingCompany.issuingcompany')),
            ],
            options={
                'verbose_name': 'Physical Shareholder',
                'verbose_name_plural': 'Physical Shareholders',
            },
        ),
        migrations.CreateModel(
            name='LegalShareholder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('EXAMINED', 'Examined'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='SUBMITTED', max_length=20)),
                ('effective_date', models.DateField()),
                ('activity_sector', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('total_shares', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(Decimal('1')), django.core.validators.MaxValueValidator(Decimal('1000000'))])),
                ('company_name', models.CharField(max_length=200)),
                ('registration_number', models.CharField(max_length=100, unique=True)),
                ('tax_id', models.CharField(max_length=100, unique=True)),
                ('legal_representative', models.CharField(max_length=200)),
                ('representative_email', models.EmailField(max_length=254)),
                ('representative_phone', models.CharField(max_length=16)),
                ('capital_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_group_member', models.BooleanField(default=False)),
                ('group_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('effective_beneficiary', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('visa_date', models.DateField(blank=True, null=True)),
                ('reference_number', models.CharField(max_length=50, unique=True)),
                ('addresses', models.ManyToManyField(related_name='legal_shareholders', to='shareholders.address')),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_approved', to=settings.AUTH_USER_MODEL)),
                ('contact_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shareholders.contactperson')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('dividends', models.ManyToManyField(related_name='legal_shareholders', to='sharedapp.dividend')),
                ('examined_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_examined', to=settings.AUTH_USER_MODEL)),
                ('issuing_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='issuingCompany.issuingcompany')),
            ],
            options={
                'verbose_name': 'Legal Shareholder',
                'verbose_name_plural': 'Legal Shareholders',
            },
        ),
        migrations.CreateModel(
            name='KeycloakUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keycloak_id', models.CharField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('roles', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='keycloak_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Keycloak User',
                'verbose_name_plural': 'Keycloak Users',
                'db_table': 'shareholders_keycloakuser',
            },
        ),
        migrations.CreateModel(
            name='HistoricalShare',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveIntegerField()),
                ('is_validated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('issuing_company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='issuingCompany.issuingcompany')),
            ],
            options={
                'verbose_name': 'historical Share',
                'verbose_name_plural': 'historical Shares',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPhysicalShareholder',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('EXAMINED', 'Examined'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='SUBMITTED', max_length=20)),
                ('effective_date', models.DateField()),
                ('activity_sector', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('notes', models.TextField(blank=True)),
                ('total_shares', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(Decimal('1')), django.core.validators.MaxValueValidator(Decimal('1000000'))])),
                ('national_id', models.CharField(db_index=True, max_length=50)),
                ('national_id_expiration', models.DateField()),
                ('date_of_birth', models.DateField()),
                ('reference_number', models.CharField(db_index=True, max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('contact_person', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='shareholders.contactperson')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('examined_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('issuing_company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='issuingCompany.issuingcompany')),
            ],
            options={
                'verbose_name': 'historical Physical Shareholder',
                'verbose_name_plural': 'historical Physical Shareholders',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLegalShareholder',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('EXAMINED', 'Examined'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='SUBMITTED', max_length=20)),
                ('effective_date', models.DateField()),
                ('activity_sector', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('notes', models.TextField(blank=True)),
                ('total_shares', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(Decimal('1')), django.core.validators.MaxValueValidator(Decimal('1000000'))])),
                ('company_name', models.CharField(max_length=200)),
                ('registration_number', models.CharField(db_index=True, max_length=100)),
                ('tax_id', models.CharField(db_index=True, max_length=100)),
                ('legal_representative', models.CharField(max_length=200)),
                ('representative_email', models.EmailField(max_length=254)),
                ('representative_phone', models.CharField(max_length=16)),
                ('capital_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_group_member', models.BooleanField(default=False)),
                ('group_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('effective_beneficiary', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('visa_date', models.DateField(blank=True, null=True)),
                ('reference_number', models.CharField(db_index=True, max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('contact_person', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='shareholders.contactperson')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('examined_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('issuing_company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='issuingCompany.issuingcompany')),
            ],
            options={
                'verbose_name': 'historical Legal Shareholder',
                'verbose_name_plural': 'historical Legal Shareholders',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='FileDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(max_length=255, upload_to=shareholders.models.document_file_path, validators=[shareholders.models.validate_file_extension])),
                ('document_type', models.CharField(choices=[('national_id', 'National ID'), ('passport', 'Passport'), ('proof_address', 'Proof of Address'), ('financial', 'Financial Document'), ('tax', 'Tax Document'), ('registration', 'Registration Document'), ('other', 'Other Document')], default='other', max_length=30)),
                ('description', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('object_id', models.UUIDField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='shareholder_content_45ee35_idx')],
            },
        ),
    ]
