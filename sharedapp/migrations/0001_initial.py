# Generated by Django 4.2.1 on 2024-12-19 12:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('issuingCompany', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalNotification',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date_created', models.DateTimeField(blank=True, editable=False)),
                ('date_sent', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(choices=[('SMS', 'SMS'), ('EMAIL', 'Email'), ('PHONE', 'Phone')], default='EMAIL', max_length=10)),
                ('is_read', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical notification',
                'verbose_name_plural': 'historical notifications',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDividend',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('general_assembly_date', models.DateField()),
                ('general_assembly_minutes', models.TextField(max_length=100)),
                ('total_dividend_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('dividend_per_share', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField()),
                ('is_validated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('issuing_company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='issuingCompany.issuingcompany')),
                ('validated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical dividend',
                'verbose_name_plural': 'historical dividends',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAnnouncement',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('description', models.TextField()),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('announcement_date', models.DateField(blank=True, editable=False)),
                ('type', models.CharField(choices=[('PURCHASE', 'Purchase'), ('SALE', 'Sale')], default='SALE', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('expiration_date', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('share', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='issuingCompany.issuingcompany')),
            ],
            options={
                'verbose_name': 'historical announcement',
                'verbose_name_plural': 'historical announcements',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_sent', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(choices=[('SMS', 'SMS'), ('EMAIL', 'Email'), ('PHONE', 'Phone')], default='EMAIL', max_length=10)),
                ('is_read', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_created'],
                'indexes': [models.Index(fields=['date_created'], name='sharedapp_n_date_cr_13673c_idx')],
            },
        ),
        migrations.CreateModel(
            name='Dividend',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('general_assembly_date', models.DateField()),
                ('general_assembly_minutes', models.FileField(upload_to='assembly_minutes/')),
                ('total_dividend_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('dividend_per_share', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField()),
                ('is_validated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issuing_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dividends', to='issuingCompany.issuingcompany')),
                ('validated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_dividends', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-general_assembly_date'],
                'indexes': [models.Index(fields=['general_assembly_date'], name='sharedapp_d_general_373846_idx'), models.Index(fields=['is_validated'], name='sharedapp_d_is_vali_3d32a2_idx')],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('announcement_date', models.DateField(auto_now_add=True)),
                ('type', models.CharField(choices=[('PURCHASE', 'Purchase'), ('SALE', 'Sale')], default='SALE', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('expiration_date', models.DateField()),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('share', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='issuingCompany.issuingcompany')),
            ],
            options={
                'ordering': ['-announcement_date'],
                'indexes': [models.Index(fields=['announcement_date'], name='sharedapp_a_announc_8fd75c_idx'), models.Index(fields=['type'], name='sharedapp_a_type_3ff215_idx')],
            },
        ),
    ]
